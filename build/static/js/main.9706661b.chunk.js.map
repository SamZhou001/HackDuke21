{"version":3,"sources":["logo.svg","api/posts.js","components/test.js","App.js","reportWebVitals.js","index.js"],"names":["retrieveAllPosts","a","process","API_KEY","NODE_ENV","console","log","response","fetch","then","json","res","allData","posts","data","push","difficulty","post_title","split","id","post_id","content","post_content","Test","props","state","textid","text","dataForDifficulty","filter","textIndex","Math","floor","random","length","this","setState","React","Component","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAe,G,MAAA,IAA0B,kC,mECA5BA,EAAgB,uCAAG,gCAAAC,EAAA,+DACEC,mIAAtBC,EADoB,EACpBA,QADoB,EACXC,SACjBC,QAAQC,IAAIH,GACNI,EAAWC,MAAM,6DAA8D,CACjF,OAAU,MACV,QAAW,CACP,kBAAmB,6BACnB,iBAAkBL,KAGzBM,KAPgB,uCAOX,WAAOF,GAAP,uBAAAN,EAAA,sEACgBM,EAASG,OADzB,OACIC,EADJ,OAEIC,EAAU,GAFd,cAGeD,EAAI,GAAGE,OAHtB,IAGF,2BAASC,EAAsB,QAC3BF,EAAQG,KAAK,CACTC,WAAYF,EAAKG,WAAWC,MAAM,KAAK,GACvCC,GAAIL,EAAKM,QACTC,QAASP,EAAKQ,eAPpB,uDAUKV,GAVL,2CAPW,uDAmBjBP,QAAQC,IAAIJ,oIAtBgB,kBAwBrBK,GAxBqB,2CAAH,qD,OCIvBgB,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTT,WAAY,GACZU,OAAQ,GACRC,KAAM,IALK,E,4FAQnB,uCAAA1B,EAAA,sEAC0BD,IAD1B,OACUY,EADV,OAEUgB,EAAoBhB,EAAQiB,QAAO,SAAAf,GAAI,OAAIA,EAAKE,aAAe,EAAKQ,MAAMR,cAC1Ec,EAAYC,KAAKC,MAAMD,KAAKE,SAAWL,EAAkBM,QAC/DC,KAAKC,SAAS,CACVV,OAAQE,EAAkBE,GAAWX,GACrCQ,KAAMC,EAAkBE,GAAWT,UAN3C,gD,0EAUA,WACI,OAAQ,8BAAMc,KAAKV,MAAME,W,GApBdU,IAAMC,WAwBVf,ICFAgB,MAtBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,4BASF,cAAC,EAAD,CAAM9B,WAAW,eCTR+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9706661b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const retrieveAllPosts = async () => {\n    const { API_KEY, NODE_ENV } = process.env;\n    console.log(API_KEY);\n    const response = fetch(\"https://thefluentme.p.rapidapi.com/post?page=1&per_page=10\", {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-host\": \"thefluentme.p.rapidapi.com\",\n            \"x-rapidapi-key\": API_KEY\n        }\n    })\n    .then(async (response) => {\n        const res = await response.json();\n        const allData = [];\n        for (let data of res[1].posts) {\n            allData.push({\n                difficulty: data.post_title.split('_')[0],\n                id: data.post_id,\n                content: data.post_content,\n            })\n        }\n        return allData\n    });\n    console.log(process.env);\n\n    return response;\n}","import React from 'react';\nimport { retrieveAllPosts } from '../api/posts';\nimport { getScore } from '../api/score';\n\nclass Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            difficulty: '',\n            textid: '',\n            text: '',\n        }\n    }\n    async componentDidMount() {\n        const allData = await retrieveAllPosts();\n        const dataForDifficulty = allData.filter(data => data.difficulty === this.props.difficulty);\n        const textIndex = Math.floor(Math.random() * dataForDifficulty.length);\n        this.setState({\n            textid: dataForDifficulty[textIndex].id,\n            text: dataForDifficulty[textIndex].content,\n        });\n    }\n\n    render() {\n        return (<div>{this.state.text}</div>)\n    }\n}\n\nexport default Test;","import logo from './logo.svg';\nimport './App.css';\nimport Test from './components/test';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <Test difficulty='MEDIUM'/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}